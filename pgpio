#!/usr/bin/env bash
#
# pgp.io CLI helper

VERSION='0.1.0'
ENDPOINT='https://pgp.io/m'

while getopts ":hv" opt; do
  case $opt in
    v)
      echo "pgp.io CLI helper $VERSION"
      exit 0
      ;;
    h)
      echo "pgp.io CLI helper $VERSION"
      echo
      echo "Usage:"
      echo
      echo "  Encrypt & Send"
      echo "  echo 'hello' | gpg -aesr '<recipient>' | pgpio [ message ID ]"
      echo
      echo "  Receive & Decrypt"
      echo "  pgpio Jag61Hgz19L | gpg -d"
      echo
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

# http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
rawurlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""

  for (( pos=0 ; pos<strlen ; pos++ )); do
    c=${string:$pos:1}
    case "$c" in
      [-_.~a-zA-Z0-9] ) o="${c}" ;;
    * ) printf -v o '%%%02x' "'$c"
  esac
  encoded+="${o}";
done
echo "${encoded}"
}


# Receive
if [ -t 0 ]; then
  # Accept either a message ID or a full URL.
  if [ "${1:0:4}" == "http" ]; then
    url=$1
  else
    url="$ENDPOINT/$(rawurlencode "$1").txt"
  fi

  result=`curl -sSL "$url"`
  RETVAL=$?

  if [ $RETVAL -eq 0 ]; then
    echo "$result"
  fi
# Send
else
  # Optionally take a message ID to write/append to.
  if [ "$1" ]; then
    url="$ENDPOINT/$1"
  else
    url=$ENDPOINT
  fi

  result=`curl -sSfi --data-binary @- $url`
  RETVAL=$?

  if [ $RETVAL -eq 0 ]; then
    location=`echo "$result" | grep Location | awk '{print $2}'`
    echo "$location"
  fi
fi
